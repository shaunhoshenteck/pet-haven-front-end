[{"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/index.js":"1","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/App.js":"2","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/store/reducers/index.js":"3","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Search.js":"4","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Home.js":"5","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/HigherOrderComponents/MainLayout.js":"6","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/NavBar.js":"7","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Users/UserLogin.js":"8","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Users/UserLogout.js":"9","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/HigherOrderComponents/auth.js":"10","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Users/UserSignup.js":"11","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/store/reducers/filters_reducer.js":"12","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/store/reducers/users_reducer.js":"13","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/petfinder.js":"14","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Users/Admin/index.js":"15","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/PetThumbnail.js":"16","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/SearchBar.js":"17","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Header/Header.js":"18","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/store/actions/user_actions.js":"19","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/store/types.js":"20","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/store/actions/filter_actions.js":"21","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Header/sidenav.js":"22","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Header/NavItems.js":"23","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/RouteLinks/RouteLinks.js":"24"},{"size":797,"mtime":1607546419454,"results":"25","hashOfConfig":"26"},{"size":1444,"mtime":1607546419449,"results":"27","hashOfConfig":"26"},{"size":282,"mtime":1607390846883,"results":"28","hashOfConfig":"26"},{"size":430,"mtime":1607388611545,"results":"29","hashOfConfig":"26"},{"size":586,"mtime":1607390846877,"results":"30","hashOfConfig":"26"},{"size":217,"mtime":1607388611543,"results":"31","hashOfConfig":"26"},{"size":799,"mtime":1607546419451,"results":"32","hashOfConfig":"26"},{"size":3593,"mtime":1607546419453,"results":"33","hashOfConfig":"26"},{"size":724,"mtime":1607546419454,"results":"34","hashOfConfig":"26"},{"size":1217,"mtime":1607546419449,"results":"35","hashOfConfig":"26"},{"size":10124,"mtime":1607546419454,"results":"36","hashOfConfig":"26"},{"size":769,"mtime":1607390846881,"results":"37","hashOfConfig":"26"},{"size":800,"mtime":1607546419457,"results":"38","hashOfConfig":"26"},{"size":266,"mtime":1607388611546,"results":"39","hashOfConfig":"26"},{"size":137,"mtime":1607546419453,"results":"40","hashOfConfig":"26"},{"size":1491,"mtime":1607388611545,"results":"41","hashOfConfig":"26"},{"size":4218,"mtime":1607390846879,"results":"42","hashOfConfig":"26"},{"size":1055,"mtime":1607388611544,"results":"43","hashOfConfig":"26"},{"size":1398,"mtime":1607558696115,"results":"44","hashOfConfig":"26"},{"size":426,"mtime":1607546419459,"results":"45","hashOfConfig":"26"},{"size":824,"mtime":1607390846880,"results":"46","hashOfConfig":"26"},{"size":410,"mtime":1607546419451,"results":"47","hashOfConfig":"26"},{"size":1351,"mtime":1607546419450,"results":"48","hashOfConfig":"26"},{"size":709,"mtime":1607546419452,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"2nqrls",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"52"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"52"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/index.js",[],["106","107"],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/App.js",[],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/store/reducers/index.js",[],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Search.js",["108"],"import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport pf from \"../petfinder\";\nconst Search = () => {\n  const history = useHistory();\n  const displayAllTypes = () => {\n    pf.animalData.types().then((resp) => {\n      console.log(resp);\n    });\n  };\n  useEffect(() => {\n    displayAllTypes();\n  }, []);\n  return (\n    <>\n      <h1>Search Result</h1>\n    </>\n  );\n};\n\nexport default Search;\n","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Home.js",["109"],"import React from 'react';\nimport PetThumbnail from './PetThumbnail';\nimport SearchBar from './SearchBar';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nconst Home = () => {\n    return(\n        <>\n            <Jumbotron fluid>\n                <Container>\n                    <h1>Pet Haven</h1>\n                    <p>Find adoptable pets near you!</p>\n                </Container>\n                </Jumbotron>\n            <Container>\n                <SearchBar />\n            </Container>\n        </>\n    );\n};\nexport default Home;","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/HigherOrderComponents/MainLayout.js",[],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/NavBar.js",["110"],"import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\n\nconst NavBar = () => {\n    //Todo: \n    // change href to correct routes\n    return(\n        <>\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#home\">Pet Haven</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"./\">Home</Nav.Link>\n                    <Nav.Link href=\"#my-account\">MyAccount</Nav.Link> \n                </Nav>\n                <Nav>\n                    <Nav.Link href=\"sign-up\">Sign Up</Nav.Link>\n                    <Nav.Link href=\"log-in\">Log In</Nav.Link>\n                </Nav>\n            </Navbar>\n        </>\n    );\n};\n\nexport default NavBar;\n\n","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Users/UserLogin.js",[],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Users/UserLogout.js",[],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/HigherOrderComponents/auth.js",["111"],"import React, {Component} from 'react';\nimport { auth } from '../store/actions/user_actions';\nimport { connect } from 'react-redux';\n\nexport default function(ComposedClass, reload){\n    class AuthenticationCheck extends Component{\n        state ={\n            loading:true\n        }\n\n        componentDidMount(){\n            this.props.dispatch(auth()).then(response =>{\n                let user = this.props.user.auth;\n\n                this.setState({loading:false});\n                if(!user){\n                    if(reload){\n                        this.props.history.push('/log-in');\n                    }\n                } else {\n                    if(reload === false){\n                        this.props.history.push('/admin');\n                    }\n                }\n            })\n        }\n\n        render(){\n            if(this.state.loading){\n                return <div className=\"loader\">Loading...</div>\n            }\n            return (\n                <ComposedClass {...this.props} user={this.props.user}/>\n            )\n        }\n    }\n\n    function mapStateToProps(state){\n        return {\n            user:state.user\n        }\n    }\n\n    return connect(mapStateToProps)(AuthenticationCheck);\n}\n","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Users/UserSignup.js",[],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/store/reducers/filters_reducer.js",[],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/store/reducers/users_reducer.js",[],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/petfinder.js",[],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Users/Admin/index.js",[],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/PetThumbnail.js",["112"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst PetThumbnail = props => {\n    return(\n        <Card style={{maxWidth: 345}}>\n        <CardActionArea>\n          <CardMedia\n            component=\"img\"\n            alt=\"Contemplative Reptile\" \n            height=\"140\"\n            image={props.image}\n            title=\"Contemplative Reptile\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              Lizard\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n              across all continents except Antarctica\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\">\n            Share\n          </Button>\n          <Button size=\"small\" color=\"primary\">\n            Learn More\n          </Button>\n        </CardActions>\n      </Card>\n    );\n};\n\nexport default PetThumbnail;\n\n\n","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/SearchBar.js",["113"],"import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector} from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport {setType, setGender, setSize, setAge, setDistance, setLocation} from '../store/actions/filter_actions';\n\n// Note: If user choose 'All' as the option for each filter, then the value is set to '' (emply string)\nconst SearchBar = props => {\n    const filters  = useSelector(state => state.filter);\n    const {type, age, size, gender, distance} = filters;\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const query = `type=${type}&age=${age}&size=${size}&gender=${gender}&distance=${distance}`\n        history.push(`/search/?${query}`);\n        console.log(history);\n    }\n    //Only for debugging\n    useEffect(() => {\n        console.log(filters);\n    }, [dispatch, filters])\n \n    return(\n        <>\n            <Form inline>\n                <Form.Row>\n                    <Form.Group className=\"mr-3\">\n                        <Form.Label className=\"mr-2\">Pet Type</Form.Label>\n                        <Form.Control as=\"select\" onChange={e => dispatch(setType(e.target.value))}>\n                            <option value=\"0\">Choose...</option>\n                            <option value=\"dog\">Dog</option>\n                            <option value=\"cat\">Cat</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group className=\"mr-3\">\n                        <Form.Label className=\"mr-2\">Age</Form.Label>\n                        <Form.Control as=\"select\" onChange={e => dispatch(setAge(e.target.value))}>\n                            <option value=\"\">All</option>\n                            <option value={type === \"cat\" ? \"kitten\" : \"puppy\"}>{type === \"cat\" ? \"Kitten\" : \"Puppy\"}</option>\n                            <option value=\"young\">Young</option>\n                            <option value=\"adult\">Adult</option>\n                            <option value=\"senior\">Senior</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group className=\"mr-3\">\n                        <Form.Label className=\"mr-2\">Size</Form.Label>\n                        <Form.Control as=\"select\" onChange={e => dispatch(setSize(e.target.value))}>\n                            <option value=\"\">All</option>\n                            <option value=\"small\">Small</option>\n                            <option value=\"medium\">Medium</option>\n                            <option value=\"large\">Large</option>\n                            <option value=\"extra large\">Extra Large</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group className=\"mr-3\">\n                        <Form.Label className=\"mr-2\">Gender</Form.Label>\n                        <Form.Control as=\"select\" onChange={e => dispatch(setGender(e.target.value))}>\n                            <option value=\"\">All</option>\n                            <option value=\"male\">Male</option>\n                            <option value=\"female\">Female</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group className=\"mr-3\">\n                        <Form.Label className=\"mr-2\">Distance</Form.Label>\n                        <Form.Control as=\"select\" onChange={e => dispatch(setDistance(e.target.value))}>\n                            <option value=\"Anywhere\">Anywhere</option>\n                            <option value=\"10\">10</option>\n                            <option value=\"25\">25</option>\n                            <option>50</option>\n                            <option>100</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <Button className=\"mr-3\" variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\n                        Search\n                    </Button>\n                </Form.Row>\n          \n            </Form>\n        </>\n    )\n}\n\nexport default SearchBar;","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Header/Header.js",["114"],"import { React, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport MainNav from \"./sidenav\";\nimport { FilterNone } from \"@material-ui/icons\";\n\nconst Header = () => {\n  const [mainNav, setMainNav] = useState(false);\n\n  const ShowNav = () => {\n    setMainNav(true);\n  };\n\n  const hideNav = () => {\n    setMainNav(false);\n  };\n\n  return (\n    <header>\n      <div className=\"open-nav\">\n        <FontAwesomeIcon\n          className=\"bars\"\n          icon={faBars}\n          onClick={() => {\n            ShowNav(true);\n          }}\n          style={{\n            color: \"black\",\n            padding: \"10px\",\n            cursor: \"pointer\",\n          }}\n          size=\"3x\"\n        />\n      </div>\n      <MainNav showNav={mainNav} onHideNav={() => hideNav(false)} />\n      <Link style={{ textDecoration: \"None\", color: \"purple\" }} to=\"/\">\n        Pet Haven\n      </Link>\n    </header>\n  );\n};\nexport default Header;\n","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/store/actions/user_actions.js",[],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/store/types.js",[],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/store/actions/filter_actions.js",[],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Header/sidenav.js",[],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Header/NavItems.js",[],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/RouteLinks/RouteLinks.js",[],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":5,"column":9,"nodeType":"121","messageId":"122","endLine":5,"endColumn":16},{"ruleId":"119","severity":1,"message":"123","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":20},{"ruleId":"119","severity":1,"message":"124","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":14},{"ruleId":"125","severity":1,"message":"126","line":5,"column":1,"nodeType":"127","endLine":45,"endColumn":2},{"ruleId":"119","severity":1,"message":"128","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":20},{"ruleId":"119","severity":1,"message":"129","line":6,"column":59,"nodeType":"121","messageId":"122","endLine":6,"endColumn":70},{"ruleId":"119","severity":1,"message":"130","line":6,"column":10,"nodeType":"121","messageId":"122","endLine":6,"endColumn":20},"no-native-reassign",["131"],"no-negated-in-lhs",["132"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'PetThumbnail' is defined but never used.","'Button' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'makeStyles' is defined but never used.","'setLocation' is defined but never used.","'FilterNone' is defined but never used.","no-global-assign","no-unsafe-negation"]