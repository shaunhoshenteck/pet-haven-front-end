[{"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\index.js":"1","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\App.js":"2","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\store\\reducers\\index.js":"3","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\components\\Search.js":"4","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\HigherOrderComponents\\MainLayout.js":"5","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\components\\Home.js":"6","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\components\\NavBar.js":"7","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\store\\reducers\\users_reducer.js":"8","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\petfinder.js":"9","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\store\\reducers\\filters_reducer.js":"10","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\components\\Header\\Header.js":"11","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\components\\PetThumbnail.js":"12","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\components\\SearchBar.js":"13","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\components\\Header\\sidenav.js":"14","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\store\\types.js":"15","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\store\\actions\\filter_actions.js":"16","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\components\\Header\\NavItems.js":"17","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\components\\RouteLinks\\RouteLinks.js":"18","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\components\\Users\\UserLogin.js":"19"},{"size":819,"mtime":1607462218915,"results":"20","hashOfConfig":"21"},{"size":1044,"mtime":1607463403306,"results":"22","hashOfConfig":"21"},{"size":292,"mtime":1607458051386,"results":"23","hashOfConfig":"21"},{"size":430,"mtime":1607287828780,"results":"24","hashOfConfig":"21"},{"size":230,"mtime":1607314193037,"results":"25","hashOfConfig":"21"},{"size":606,"mtime":1607458051379,"results":"26","hashOfConfig":"21"},{"size":825,"mtime":1607458051380,"results":"27","hashOfConfig":"21"},{"size":150,"mtime":1607287471579,"results":"28","hashOfConfig":"21"},{"size":266,"mtime":1607287470291,"results":"29","hashOfConfig":"21"},{"size":802,"mtime":1607458051385,"results":"30","hashOfConfig":"21"},{"size":1098,"mtime":1607324751460,"results":"31","hashOfConfig":"21"},{"size":1491,"mtime":1607287470573,"results":"32","hashOfConfig":"21"},{"size":4302,"mtime":1607458051381,"results":"33","hashOfConfig":"21"},{"size":428,"mtime":1607323878620,"results":"34","hashOfConfig":"21"},{"size":396,"mtime":1607458051387,"results":"35","hashOfConfig":"21"},{"size":874,"mtime":1607458051384,"results":"36","hashOfConfig":"21"},{"size":987,"mtime":1607324299221,"results":"37","hashOfConfig":"21"},{"size":734,"mtime":1607324486145,"results":"38","hashOfConfig":"21"},{"size":2640,"mtime":1607463304196,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e62s1i",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"46"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\index.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\App.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\store\\reducers\\index.js",[],["85","86"],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\components\\Search.js",["87"],"import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport pf from \"../petfinder\";\nconst Search = () => {\n  const history = useHistory();\n  const displayAllTypes = () => {\n    pf.animalData.types().then((resp) => {\n      console.log(resp);\n    });\n  };\n  useEffect(() => {\n    displayAllTypes();\n  }, []);\n  return (\n    <>\n      <h1>Search Result</h1>\n    </>\n  );\n};\n\nexport default Search;\n","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\HigherOrderComponents\\MainLayout.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\components\\Home.js",["88"],"import React from 'react';\r\nimport PetThumbnail from './PetThumbnail';\r\nimport SearchBar from './SearchBar';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nconst Home = () => {\r\n    return(\r\n        <>\r\n            <Jumbotron fluid>\r\n                <Container>\r\n                    <h1>Pet Haven</h1>\r\n                    <p>Find adoptable pets near you!</p>\r\n                </Container>\r\n                </Jumbotron>\r\n            <Container>\r\n                <SearchBar />\r\n            </Container>\r\n        </>\r\n    );\r\n};\r\nexport default Home;","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\components\\NavBar.js",["89"],"import React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nconst NavBar = () => {\r\n    //Todo: \r\n    // change href to correct routes\r\n    return(\r\n        <>\r\n            <Navbar bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"#home\">Pet Haven</Navbar.Brand>\r\n                <Nav className=\"mr-auto\">\r\n                    <Nav.Link href=\"#\">Home</Nav.Link>\r\n                    <Nav.Link href=\"#my-account\">MyAccount</Nav.Link> \r\n                </Nav>\r\n                <Nav>\r\n                    <Nav.Link href=\"sign-up\">Sign Up</Nav.Link>\r\n                    <Nav.Link href=\"log-in\">Log In</Nav.Link>\r\n                </Nav>\r\n            </Navbar>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n\r\n","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\store\\reducers\\users_reducer.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\petfinder.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\store\\reducers\\filters_reducer.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\components\\Header\\Header.js",["90"],"import { React, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\r\nimport MainNav from \"./sidenav\";\r\nimport { FilterNone } from \"@material-ui/icons\";\r\n\r\nconst Header = () => {\r\n  const [mainNav, setMainNav] = useState(false);\r\n\r\n  const ShowNav = () => {\r\n    setMainNav(true);\r\n  };\r\n\r\n  const hideNav = () => {\r\n    setMainNav(false);\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <div className=\"open-nav\">\r\n        <FontAwesomeIcon\r\n          className=\"bars\"\r\n          icon={faBars}\r\n          onClick={() => {\r\n            ShowNav(true);\r\n          }}\r\n          style={{\r\n            color: \"black\",\r\n            padding: \"10px\",\r\n            cursor: \"pointer\",\r\n          }}\r\n          size=\"3x\"\r\n        />\r\n      </div>\r\n      <MainNav showNav={mainNav} onHideNav={() => hideNav(false)} />\r\n      <Link style={{ textDecoration: \"None\", color: \"purple\" }} to=\"/\">\r\n        Pet Haven\r\n      </Link>\r\n    </header>\r\n  );\r\n};\r\nexport default Header;\r\n","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\components\\PetThumbnail.js",["91"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst PetThumbnail = props => {\n    return(\n        <Card style={{maxWidth: 345}}>\n        <CardActionArea>\n          <CardMedia\n            component=\"img\"\n            alt=\"Contemplative Reptile\" \n            height=\"140\"\n            image={props.image}\n            title=\"Contemplative Reptile\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              Lizard\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n              across all continents except Antarctica\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\">\n            Share\n          </Button>\n          <Button size=\"small\" color=\"primary\">\n            Learn More\n          </Button>\n        </CardActions>\n      </Card>\n    );\n};\n\nexport default PetThumbnail;\n\n\n","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\components\\SearchBar.js",["92"],"import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector} from 'react-redux';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport {setType, setGender, setSize, setAge, setDistance, setLocation} from '../store/actions/filter_actions';\r\n\r\n// Note: If user choose 'All' as the option for each filter, then the value is set to '' (emply string)\r\nconst SearchBar = props => {\r\n    const filters  = useSelector(state => state.filter);\r\n    const {type, age, size, gender, distance} = filters;\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const query = `type=${type}&age=${age}&size=${size}&gender=${gender}&distance=${distance}`\r\n        history.push(`/search/?${query}`);\r\n        console.log(history);\r\n    }\r\n    //Only for debugging\r\n    useEffect(() => {\r\n        console.log(filters);\r\n    }, [dispatch, filters])\r\n \r\n    return(\r\n        <>\r\n            <Form inline>\r\n                <Form.Row>\r\n                    <Form.Group className=\"mr-3\">\r\n                        <Form.Label className=\"mr-2\">Pet Type</Form.Label>\r\n                        <Form.Control as=\"select\" onChange={e => dispatch(setType(e.target.value))}>\r\n                            <option value=\"0\">Choose...</option>\r\n                            <option value=\"dog\">Dog</option>\r\n                            <option value=\"cat\">Cat</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mr-3\">\r\n                        <Form.Label className=\"mr-2\">Age</Form.Label>\r\n                        <Form.Control as=\"select\" onChange={e => dispatch(setAge(e.target.value))}>\r\n                            <option value=\"\">All</option>\r\n                            <option value={type === \"cat\" ? \"kitten\" : \"puppy\"}>{type === \"cat\" ? \"Kitten\" : \"Puppy\"}</option>\r\n                            <option value=\"young\">Young</option>\r\n                            <option value=\"adult\">Adult</option>\r\n                            <option value=\"senior\">Senior</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mr-3\">\r\n                        <Form.Label className=\"mr-2\">Size</Form.Label>\r\n                        <Form.Control as=\"select\" onChange={e => dispatch(setSize(e.target.value))}>\r\n                            <option value=\"\">All</option>\r\n                            <option value=\"small\">Small</option>\r\n                            <option value=\"medium\">Medium</option>\r\n                            <option value=\"large\">Large</option>\r\n                            <option value=\"extra large\">Extra Large</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mr-3\">\r\n                        <Form.Label className=\"mr-2\">Gender</Form.Label>\r\n                        <Form.Control as=\"select\" onChange={e => dispatch(setGender(e.target.value))}>\r\n                            <option value=\"\">All</option>\r\n                            <option value=\"male\">Male</option>\r\n                            <option value=\"female\">Female</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mr-3\">\r\n                        <Form.Label className=\"mr-2\">Distance</Form.Label>\r\n                        <Form.Control as=\"select\" onChange={e => dispatch(setDistance(e.target.value))}>\r\n                            <option value=\"Anywhere\">Anywhere</option>\r\n                            <option value=\"10\">10</option>\r\n                            <option value=\"25\">25</option>\r\n                            <option>50</option>\r\n                            <option>100</option>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    <Button className=\"mr-3\" variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\r\n                        Search\r\n                    </Button>\r\n                </Form.Row>\r\n          \r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SearchBar;","C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\components\\Header\\sidenav.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\store\\types.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\store\\actions\\filter_actions.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\components\\Header\\NavItems.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\components\\RouteLinks\\RouteLinks.js",[],"C:\\Users\\Shaun\\Desktop\\Align\\Align Classes\\Web Development\\Final Project\\pet-haven-front-end\\src\\components\\Users\\UserLogin.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":5,"column":9,"nodeType":"99","messageId":"100","endLine":5,"endColumn":16},{"ruleId":"97","severity":1,"message":"101","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":20},{"ruleId":"97","severity":1,"message":"102","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":14},{"ruleId":"97","severity":1,"message":"103","line":6,"column":10,"nodeType":"99","messageId":"100","endLine":6,"endColumn":20},{"ruleId":"97","severity":1,"message":"104","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":20},{"ruleId":"97","severity":1,"message":"105","line":6,"column":59,"nodeType":"99","messageId":"100","endLine":6,"endColumn":70},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'PetThumbnail' is defined but never used.","'Button' is defined but never used.","'FilterNone' is defined but never used.","'makeStyles' is defined but never used.","'setLocation' is defined but never used.","no-global-assign","no-unsafe-negation"]