[{"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/index.js":"1","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/App.js":"2","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/store/reducers/index.js":"3","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Search.js":"4","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Home.js":"5","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/HigherOrderComponents/MainLayout.js":"6","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/NavBar.js":"7","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/store/reducers/filters_reducer.js":"8","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/store/reducers/users_reducer.js":"9","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/petfinder.js":"10","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/PetThumbnail.js":"11","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/SearchBar.js":"12","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Header/Header.js":"13","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/store/actions/user_actions.js":"14","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/store/types.js":"15","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/store/actions/filter_actions.js":"16","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Header/sidenav.js":"17","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Header/NavItems.js":"18","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/RouteLinks/RouteLinks.js":"19"},{"size":790,"mtime":1607560848989,"results":"20","hashOfConfig":"21"},{"size":846,"mtime":1607560848985,"results":"22","hashOfConfig":"21"},{"size":282,"mtime":1607390846883,"results":"23","hashOfConfig":"21"},{"size":430,"mtime":1607388611545,"results":"24","hashOfConfig":"21"},{"size":586,"mtime":1607390846877,"results":"25","hashOfConfig":"21"},{"size":217,"mtime":1607388611543,"results":"26","hashOfConfig":"21"},{"size":798,"mtime":1607560848987,"results":"27","hashOfConfig":"21"},{"size":769,"mtime":1607390846881,"results":"28","hashOfConfig":"21"},{"size":150,"mtime":1607560848990,"results":"29","hashOfConfig":"21"},{"size":266,"mtime":1607388611546,"results":"30","hashOfConfig":"21"},{"size":1491,"mtime":1607388611545,"results":"31","hashOfConfig":"21"},{"size":4218,"mtime":1607390846879,"results":"32","hashOfConfig":"21"},{"size":1055,"mtime":1607388611544,"results":"33","hashOfConfig":"21"},{"size":0,"mtime":1607560848989,"results":"34","hashOfConfig":"21"},{"size":384,"mtime":1607560848991,"results":"35","hashOfConfig":"21"},{"size":824,"mtime":1607390846880,"results":"36","hashOfConfig":"21"},{"size":408,"mtime":1607560848987,"results":"37","hashOfConfig":"21"},{"size":947,"mtime":1607560848986,"results":"38","hashOfConfig":"21"},{"size":689,"mtime":1607560848988,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"2nqrls",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"44"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/index.js",[],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/App.js",[],["85","86"],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/store/reducers/index.js",[],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Search.js",["87"],"import React, { useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport pf from \"../petfinder\";\nconst Search = () => {\n  const history = useHistory();\n  const displayAllTypes = () => {\n    pf.animalData.types().then((resp) => {\n      console.log(resp);\n    });\n  };\n  useEffect(() => {\n    displayAllTypes();\n  }, []);\n  return (\n    <>\n      <h1>Search Result</h1>\n    </>\n  );\n};\n\nexport default Search;\n","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Home.js",["88"],"import React from 'react';\nimport PetThumbnail from './PetThumbnail';\nimport SearchBar from './SearchBar';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nconst Home = () => {\n    return(\n        <>\n            <Jumbotron fluid>\n                <Container>\n                    <h1>Pet Haven</h1>\n                    <p>Find adoptable pets near you!</p>\n                </Container>\n                </Jumbotron>\n            <Container>\n                <SearchBar />\n            </Container>\n        </>\n    );\n};\nexport default Home;","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/HigherOrderComponents/MainLayout.js",[],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/NavBar.js",["89"],"import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\n\nconst NavBar = () => {\n    //Todo: \n    // change href to correct routes\n    return(\n        <>\n            <Navbar bg=\"dark\" variant=\"dark\">\n                <Navbar.Brand href=\"#home\">Pet Haven</Navbar.Brand>\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"./\">Home</Nav.Link>\n                    <Nav.Link href=\"#my-account\">MyAccount</Nav.Link> \n                </Nav>\n                <Nav>\n                    <Nav.Link href=\"sign-up\">Sign Up</Nav.Link>\n                    <Nav.Link href=\"log-in\">Log In</Nav.Link>\n                </Nav>\n            </Navbar>\n        </>\n    );\n};\n\nexport default NavBar;\n\n","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/store/reducers/filters_reducer.js",[],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/store/reducers/users_reducer.js",[],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/petfinder.js",[],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/PetThumbnail.js",["90"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\n\nconst PetThumbnail = props => {\n    return(\n        <Card style={{maxWidth: 345}}>\n        <CardActionArea>\n          <CardMedia\n            component=\"img\"\n            alt=\"Contemplative Reptile\" \n            height=\"140\"\n            image={props.image}\n            title=\"Contemplative Reptile\"\n          />\n          <CardContent>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n              Lizard\n            </Typography>\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n              Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\n              across all continents except Antarctica\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        <CardActions>\n          <Button size=\"small\" color=\"primary\">\n            Share\n          </Button>\n          <Button size=\"small\" color=\"primary\">\n            Learn More\n          </Button>\n        </CardActions>\n      </Card>\n    );\n};\n\nexport default PetThumbnail;\n\n\n","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/SearchBar.js",["91"],"import React, { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch, useSelector} from 'react-redux';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport {setType, setGender, setSize, setAge, setDistance, setLocation} from '../store/actions/filter_actions';\n\n// Note: If user choose 'All' as the option for each filter, then the value is set to '' (emply string)\nconst SearchBar = props => {\n    const filters  = useSelector(state => state.filter);\n    const {type, age, size, gender, distance} = filters;\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        const query = `type=${type}&age=${age}&size=${size}&gender=${gender}&distance=${distance}`\n        history.push(`/search/?${query}`);\n        console.log(history);\n    }\n    //Only for debugging\n    useEffect(() => {\n        console.log(filters);\n    }, [dispatch, filters])\n \n    return(\n        <>\n            <Form inline>\n                <Form.Row>\n                    <Form.Group className=\"mr-3\">\n                        <Form.Label className=\"mr-2\">Pet Type</Form.Label>\n                        <Form.Control as=\"select\" onChange={e => dispatch(setType(e.target.value))}>\n                            <option value=\"0\">Choose...</option>\n                            <option value=\"dog\">Dog</option>\n                            <option value=\"cat\">Cat</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group className=\"mr-3\">\n                        <Form.Label className=\"mr-2\">Age</Form.Label>\n                        <Form.Control as=\"select\" onChange={e => dispatch(setAge(e.target.value))}>\n                            <option value=\"\">All</option>\n                            <option value={type === \"cat\" ? \"kitten\" : \"puppy\"}>{type === \"cat\" ? \"Kitten\" : \"Puppy\"}</option>\n                            <option value=\"young\">Young</option>\n                            <option value=\"adult\">Adult</option>\n                            <option value=\"senior\">Senior</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group className=\"mr-3\">\n                        <Form.Label className=\"mr-2\">Size</Form.Label>\n                        <Form.Control as=\"select\" onChange={e => dispatch(setSize(e.target.value))}>\n                            <option value=\"\">All</option>\n                            <option value=\"small\">Small</option>\n                            <option value=\"medium\">Medium</option>\n                            <option value=\"large\">Large</option>\n                            <option value=\"extra large\">Extra Large</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group className=\"mr-3\">\n                        <Form.Label className=\"mr-2\">Gender</Form.Label>\n                        <Form.Control as=\"select\" onChange={e => dispatch(setGender(e.target.value))}>\n                            <option value=\"\">All</option>\n                            <option value=\"male\">Male</option>\n                            <option value=\"female\">Female</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <Form.Group className=\"mr-3\">\n                        <Form.Label className=\"mr-2\">Distance</Form.Label>\n                        <Form.Control as=\"select\" onChange={e => dispatch(setDistance(e.target.value))}>\n                            <option value=\"Anywhere\">Anywhere</option>\n                            <option value=\"10\">10</option>\n                            <option value=\"25\">25</option>\n                            <option>50</option>\n                            <option>100</option>\n                        </Form.Control>\n                    </Form.Group>\n                    <Button className=\"mr-3\" variant=\"primary\" type=\"submit\" onClick={handleSubmit}>\n                        Search\n                    </Button>\n                </Form.Row>\n          \n            </Form>\n        </>\n    )\n}\n\nexport default SearchBar;","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Header/Header.js",["92"],"import { React, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport MainNav from \"./sidenav\";\nimport { FilterNone } from \"@material-ui/icons\";\n\nconst Header = () => {\n  const [mainNav, setMainNav] = useState(false);\n\n  const ShowNav = () => {\n    setMainNav(true);\n  };\n\n  const hideNav = () => {\n    setMainNav(false);\n  };\n\n  return (\n    <header>\n      <div className=\"open-nav\">\n        <FontAwesomeIcon\n          className=\"bars\"\n          icon={faBars}\n          onClick={() => {\n            ShowNav(true);\n          }}\n          style={{\n            color: \"black\",\n            padding: \"10px\",\n            cursor: \"pointer\",\n          }}\n          size=\"3x\"\n        />\n      </div>\n      <MainNav showNav={mainNav} onHideNav={() => hideNav(false)} />\n      <Link style={{ textDecoration: \"None\", color: \"purple\" }} to=\"/\">\n        Pet Haven\n      </Link>\n    </header>\n  );\n};\nexport default Header;\n","/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/store/actions/user_actions.js",[],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/store/types.js",[],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/store/actions/filter_actions.js",[],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Header/sidenav.js",[],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/Header/NavItems.js",[],"/Users/jchen/Desktop/cs5610/pet-haven-front-end/src/components/RouteLinks/RouteLinks.js",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":5,"column":9,"nodeType":"99","messageId":"100","endLine":5,"endColumn":16},{"ruleId":"97","severity":1,"message":"101","line":2,"column":8,"nodeType":"99","messageId":"100","endLine":2,"endColumn":20},{"ruleId":"97","severity":1,"message":"102","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":14},{"ruleId":"97","severity":1,"message":"103","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":20},{"ruleId":"97","severity":1,"message":"104","line":6,"column":59,"nodeType":"99","messageId":"100","endLine":6,"endColumn":70},{"ruleId":"97","severity":1,"message":"105","line":6,"column":10,"nodeType":"99","messageId":"100","endLine":6,"endColumn":20},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","'PetThumbnail' is defined but never used.","'Button' is defined but never used.","'makeStyles' is defined but never used.","'setLocation' is defined but never used.","'FilterNone' is defined but never used.","no-global-assign","no-unsafe-negation"]